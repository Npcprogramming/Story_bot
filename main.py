import logging
import sqlite3
import os
import uuid
from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InlineQueryResultArticle,
    InputTextMessageContent,
)
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    InlineQueryHandler,
    ContextTypes,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect("users.db", check_same_thread=False)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â—ë –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor.execute(
    """
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY,
    username TEXT,
    referral_id INTEGER,
    referrals_count INTEGER DEFAULT 0,
    story_progress INTEGER DEFAULT 1
)
"""
)
conn.commit()


# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–∞—Å—Ç–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ –ø—Ä–æ–≥—Ä–µ—Å—Å—É
def get_story_part(progress):
    story = {
        1: {
            "text": (
                "–ò—Å—Ç–æ—Ä–∏—è –≤ —ç—Ç–æ–º –±–æ—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –ø—Ä–µ–¥—ã–¥—É—â–∏–º —á–∏—Ç–∞—Ç–µ–ª—è–º –∏ –¥–æ—à–ª–∞ –¥–æ —Ç–µ–±—è.\n\n"
                "–ù–æ –¥–∞–∂–µ —Ö–æ—Ä–æ—à–∏–µ —Ä–∞—Å—Å–∫–∞–∑—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å üòÅ\n\n"
                "–ü—Ä–∏–≥–ª–∞—Å–∏ –¥–≤—É—Ö —Å–≤–æ–∏—Ö –∑–Ω–∞–∫–æ–º—ã—Ö, —á—Ç–æ–±—ã –∑–¥–µ—Å—å –Ω–∞—á–∞–ª–æ—Å—å –Ω–∞—Å—Ç–æ—è—â–µ–µ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ. "
                "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—Å—è ‚Äî –Ω–∞—á–Ω—ë—Ç—Å—è —Å—é–∂–µ—Ç. –Ø —á–µ—Å—Ç–Ω–æ —Å—Ç–∞—Ä–∞–ª—Å—è ‚ù§Ô∏è"
            ),
            # –î–ª—è –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏ –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞
            "photo": None,
            "audio": None,
            "button_text": None,
            "callback_data": None,
        },
        2: {
            "text": (
                "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª –¥—Ä—É–∑–µ–π!\n\n"
                "–¢–µ–ø–µ—Ä—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞—Å—Ç–æ—è—â–µ–µ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ.\n\n"
                "–ù–∞–∂–º–∏ '–î–∞–ª–µ–µ', —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å."
            ),
            "photo": None,
            "audio": None,
            "button_text": "–î–∞–ª–µ–µ",
            "callback_data": "continue_story",
        },
        3: {
            "text": (
                "–í–Ω–∏–∑—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∞ –ø–µ—Å–Ω—è –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ–≥—Ä—É–∂–µ–Ω–∏—è. –Ø –±—ã –Ω–∞ —Ç–≤–æ–µ–º –º–µ—Å—Ç–µ –µ–µ –≤–∫–ª—é—á–∏–ª.\n\n"
                "–î–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è!\n\n"
                "–ú—ç—Ä–∏ –∏ –î–∂–µ—Ä—Ä–∏ ‚Äì –¥–≤–∞ –≥–ª–∞–≤–Ω—ã—Ö –≥–µ—Ä–æ—è –º–æ–µ–≥–æ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è. –•–æ—á—É, —á—Ç–æ–±—ã —Ç—ã –ø—Ä–∏–¥–∞–ª –∏–º —Å–≤–æ–∏ –æ–±—Ä–∞–∑—ã ‚Äì —ç—Ç–æ –±—É–¥–µ—Ç –ª—É—á—à–µ, —á–µ–º –µ—Å–ª–∏ —è –æ–ø–∏—à—É –ª–∏—à—å –æ–±—â–∏–µ —á–µ—Ä—Ç—ã.\n\n"
                "–°–µ–π—á–∞—Å —ç—Ç–∏—Ö –≥–µ—Ä–æ–µ–≤ —Ä–∞–∑–¥–µ–ª—è–µ—Ç –±–æ–ª—å—à–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ. –Ø –¥–∞–∂–µ –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é, —á—Ç–æ —ç—Ç–æ –±—É–¥–µ—Ç –∏—Å—Ç–æ—Ä–∏—è –æ —Å—á–∞—Å—Ç–ª–∏–≤–æ–π –ª—é–±–≤–∏.\n\n"
                "–ò—Ç–∞–∫, –î–∂–µ—Ä—Ä–∏ —Å —É—Ç—Ä–∞ –æ—Ç–∫—Ä—ã–ª –ø–æ—á—Ç–æ–≤—ã–π —è—â–∏–∫ –∏ —É–≤–∏–¥–µ–ª –∑–∞–ø–µ—á–∞—Ç–∞–Ω–Ω—ã–π –∫–æ–Ω–≤–µ—Ä—Ç..."
            ),
            "photo": "photo1.jpg",
            "audio": "Spring.mp3",
            "button_text": "–ß–∏—Ç–∞—Ç—å –¥–∞–ª—å—à–µ",
            "callback_data": "continue_story",
        },
        # –î—Ä—É–≥–∏–µ —á–∞—Å—Ç–∏ –∏—Å—Ç–æ—Ä–∏–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏...
        35: {
            "text": (
                "–ö–∞–∫ —è –∏ –æ–±–µ—â–∞–ª –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ - —ç—Ç–∞ –∏—Å—Ç–æ—Ä–∏—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞. \n\n"
                "–ù–æ –≤ —ç—Ç–æ–º –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –±–µ–∑ —á–∏—Ç–∞—Ç–µ–ª–µ–π. –ï—Å–ª–∏ —É–≤–∏–∂—É, —á—Ç–æ –ª—é–¥–µ–π –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–æ, —Ç–æ –Ω–∞—á–Ω—É –≤—ã–ø—É—Å–∫–∞—Ç—å –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ:\n\n"
                "–í —ç—Ç–æ–º –∂–µ –±–æ—Ç–µ. –ï–∂–µ–¥–Ω–µ–≤–Ω–æ. –í 22:00 –ø–æ –ú–°–ö. –ù–∞—á–∏–Ω–∞—è —Å 1 –º–∞—Ä—Ç–∞.\n\n"
                "–¢–∞–∫ —á—Ç–æ –ø–æ—Å—Ç–∞—Ä–∞–π—Å—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤—Å–µ–º –∑–Ω–∞–∫–æ–º—ã–º. –í–æ—Ç –æ–Ω–∞: @HotelSpringBot\n\n"                                
                "–≠—Ç–∏–º —Ç—ã –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ –ø–æ–º–æ–∂–µ—à—å‚ù§Ô∏è"
            ),
            "photo": None,
            "audio": None,
            "button_text": None,
            "callback_data": None,
        },
    }
    return story.get(progress, {"text": "–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å.", "photo": None, "audio": None})


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    username = update.effective_user.username or update.effective_user.first_name
    args = context.args[0] if context.args else None

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –±–∞–∑–µ
    cursor.execute("SELECT * FROM users WHERE id = ?", (user_id,))
    user = cursor.fetchone()
    if not user:
        ref_id = int(args) if args and args.isdigit() else None
        cursor.execute(
            "INSERT INTO users (id, username, referral_id) VALUES (?, ?, ?)",
            (user_id, username, ref_id),
        )
        conn.commit()
        # –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à—ë–ª –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ,
        # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö —É —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥ –ª–∏ –æ–Ω –Ω—É–∂–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        if ref_id:
            cursor.execute(
                "UPDATE users SET referrals_count = referrals_count + 1 WHERE id = ?",
                (ref_id,),
            )
            conn.commit()
            cursor.execute(
                "SELECT referrals_count, story_progress FROM users WHERE id = ?", (ref_id,)
            )
            data = cursor.fetchone()
            if data:
                referrals_count, story_progress = data
                # –ï—Å–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–æ –º–∏–Ω–∏–º—É–º 2 —á–µ–ª–æ–≤–µ–∫–∞ –∏ –∏—Å—Ç–æ—Ä–∏—è –µ—â—ë –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∞,
                # –æ–±–Ω–æ–≤–ª—è–µ–º progress –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä—É —á–∞—Å—Ç—å 2 –∏—Å—Ç–æ—Ä–∏–∏
                if referrals_count >= 2 and story_progress == 1:
                    cursor.execute(
                        "UPDATE users SET story_progress = 2 WHERE id = ?", (ref_id,)
                    )
                    conn.commit()
                    story_part = get_story_part(2)
                    keyboard = None
                    if story_part.get("button_text") and story_part.get("callback_data"):
                        keyboard = InlineKeyboardMarkup(
                            [
                                [
                                    InlineKeyboardButton(
                                        story_part["button_text"],
                                        callback_data=story_part["callback_data"],
                                    )
                                ]
                            ]
                        )
                    await context.bot.send_message(
                        chat_id=ref_id, text=story_part["text"], reply_markup=keyboard
                    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–±–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏)
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {username}!\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é."
    )

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É: —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è¬ª —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
    referral_link = f"https://t.me/{context.bot.username}?start={user_id}"
    share_button = InlineKeyboardButton("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", switch_inline_query=referral_link)
    keyboard = InlineKeyboardMarkup([[share_button]])

    story_part = get_story_part(1)
    if story_part["photo"]:
        await update.message.reply_photo(
            photo=story_part["photo"],
            caption=story_part["text"],
            reply_markup=keyboard,
        )
    else:
        await update.message.reply_text(
            story_part["text"],
            reply_markup=keyboard,
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
async def inline_query(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.inline_query.from_user.id
    referral_link = f"https://t.me/{context.bot.username}?start={user_id}"
    results = [
        InlineQueryResultArticle(
            id=str(uuid.uuid4()),
            title="–ú–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞",
            input_message_content=InputTextMessageContent(
                f"–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –±–æ—Ç—É: {referral_link}"
            ),
        )
    ]
    await update.inline_query.answer(results)


# Callback –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ (–¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ —Å callback_data="continue_story")
async def continue_story(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id

    cursor.execute("SELECT story_progress FROM users WHERE id = ?", (user_id,))
    result = cursor.fetchone()
    if not result:
        await query.message.reply_text("–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    current_progress = result[0]
    new_progress = current_progress + 1
    cursor.execute(
        "UPDATE users SET story_progress = ? WHERE id = ?", (new_progress, user_id)
    )
    conn.commit()

    story_part = get_story_part(new_progress)
    if story_part["text"] == "–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å.":
        await end_story(update, context)
        return

    keyboard = None
    if story_part.get("button_text") and story_part.get("callback_data"):
        keyboard = InlineKeyboardMarkup(
            [[InlineKeyboardButton(story_part["button_text"], callback_data=story_part["callback_data"])]]
        )

    if story_part.get("photo"):
        await query.message.reply_photo(
            photo=story_part["photo"],
            caption=story_part["text"],
            reply_markup=keyboard,
        )
    else:
        await query.message.reply_text(
            story_part["text"],
            reply_markup=keyboard,
        )
    if story_part.get("audio"):
        try:
            with open(story_part["audio"], "rb") as audio_file:
                await query.message.reply_audio(audio=audio_file)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—É–¥–∏–æ: {e}")


# Callback –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
async def end_story(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    if query:
        await query.answer()
        await query.message.reply_text("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–æ–Ω—á–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ!")
    else:
        await update.message.reply_text("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–æ–Ω—á–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ!")


# –ö–æ–º–∞–Ω–¥–∞ /stats –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    cursor.execute("SELECT referrals_count, story_progress FROM users WHERE id = ?", (user_id,))
    result = cursor.fetchone()
    if not result:
        await update.message.reply_text("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
        return
    referrals_count, story_progress = result
    await update.message.reply_text(
        f"–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        f"–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {referrals_count}\n"
        f"–ü—Ä–æ–≥—Ä–µ—Å—Å –∏—Å—Ç–æ—Ä–∏–∏: –ß–∞—Å—Ç—å {story_progress}"
    )


def main():
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
    token = "7767052595:AAHSLtGeGeBUDXpdcnV80PECZxuqzlbRpJs"
    application = ApplicationBuilder().token(token).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("stats", stats))
    application.add_handler(CallbackQueryHandler(continue_story, pattern="continue_story"))
    application.add_handler(InlineQueryHandler(inline_query))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()


if __name__ == "__main__":
    main()
